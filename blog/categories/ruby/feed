<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Aimless</title>
    <link>http://aimless.jp/categories/ruby/</link>
    <description>Recent content in Ruby on Aimless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 07 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://aimless.jp/categories/ruby/feed/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Rails4でRedmine CORSを使う</title>
      <link>http://aimless.jp/blog/archives/2669</link>
      <pubDate>Tue, 07 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/2669</guid>
      <description>

&lt;h2 id=&#34;やりたいこと:273ca993f084584514ef76dff312aa4b&#34;&gt;やりたいこと&lt;/h2&gt;

&lt;p&gt;　Cross-Origin Resource SharingでRedmineのデータを取得する&lt;/p&gt;

&lt;h2 id=&#34;実現方法:273ca993f084584514ef76dff312aa4b&#34;&gt;実現方法&lt;/h2&gt;

&lt;p&gt;　&lt;a href=&#34;https://github.com/mavimo/redmine_cors&#34;&gt;Redmine CORS&lt;/a&gt;を使い、RedmineをCORSに対応させる&lt;/p&gt;

&lt;h2 id=&#34;やってみたこと:273ca993f084584514ef76dff312aa4b&#34;&gt;やってみたこと&lt;/h2&gt;

&lt;p&gt;　READMEに記載されている方法でやってみたところ、以下の環境では動作しませんでした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Environment:
  Redmine version                3.1.0.devel
  Ruby version                   2.2.2-p95 (2015-04-13) [x86_64-linux]
  Rails version                  4.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　具体的にはプラグインのマイグレーション時に以下のエラーメッセージが出ます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mogok rake redmine:plugins:migrate                   
Running &amp;#039;rake redmine:plugins:migrate&amp;#039;...
2015-07-07T20:56:44+09:00 console[app3014.29]: An error occurred while loading the routes definition of redmine_cors plugin (/app/plugins/redmine_cors/config/routes.rb): You should not use the `match` method in your router without specifying an HTTP method.
2015-07-07T20:56:44+09:00 console[app3014.29]: If you want to expose your action to both GET and POST, add `via: [:get, :post]` option.
2015-07-07T20:56:44+09:00 console[app3014.29]: If you want to expose your action to GET, use `get` in the router:
2015-07-07T20:56:44+09:00 console[app3014.29]:   Instead of: match &#34;controller#action&#34;
2015-07-07T20:56:44+09:00 console[app3014.29]:   Do: get &#34;controller#action&#34;.
&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　エラーメッセージに言われるがまま、以下の箇所のmatchをgetにかえると、プラグインのマイグレーションは成功します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ more plugins/redmine_cors/config/routes.rb 
RedmineApp::Application.routes.draw do
  match &amp;#039;*path&amp;#039;, :to =&amp;gt; &amp;#039;cors#preflight&amp;#039;, :constraints =&amp;gt; {:method =&amp;gt; &amp;#039;OPTIONS&amp;#039;}
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　ただし、ルーティングがないというエラーメッセージが出て、結局動作しません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2015-07-07T20:00:46+09:00 app[app3012.03]: ActionController::RoutingError (No route matches [OPTIONS] &#34;/users/current.json&#34;):
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/actionpack-4.2.3/lib/action_dispatch/middleware/debug_exceptions.rb:21:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/actionpack-4.2.3/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/rack/logger.rb:38:in `call_app&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/rack/logger.rb:20:in `block in call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/activesupport-4.2.3/lib/active_support/tagged_logging.rb:68:in `block in tagged&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/activesupport-4.2.3/lib/active_support/tagged_logging.rb:26:in `tagged&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/activesupport-4.2.3/lib/active_support/tagged_logging.rb:68:in `tagged&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/rack/logger.rb:20:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/actionpack-4.2.3/lib/action_dispatch/middleware/request_id.rb:21:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/rack-1.6.4/lib/rack/methodoverride.rb:22:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/rack-1.6.4/lib/rack/runtime.rb:18:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/activesupport-4.2.3/lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/actionpack-4.2.3/lib/action_dispatch/middleware/static.rb:116:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/rack-1.6.4/lib/rack/sendfile.rb:113:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/engine.rb:518:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/application.rb:165:in `call&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/railtie.rb:194:in `public_send&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   .bundle/gems/ruby/2.2.0/gems/railties-4.2.3/lib/rails/railtie.rb:194:in `method_missing&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/connection.rb:86:in `block in pre_process&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/connection.rb:84:in `catch&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/connection.rb:84:in `pre_process&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/connection.rb:53:in `process&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/connection.rb:39:in `receive_data&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/eventmachine.rb:187:in `run_machine&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/eventmachine.rb:187:in `run&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/backends/base.rb:73:in `start&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/server.rb:162:in `start&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/controllers/controller.rb:87:in `start&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/runner.rb:199:in `run_command&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2.2-1/lib/ruby/site_ruby/2.2.0/thin/runner.rb:155:in `run!&amp;#039;
2015-07-07T20:00:46+09:00 app[app3012.03]:   /opt/ruby-2.2/bin/thin:6:in `&amp;lt;main&amp;gt;&amp;#039;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;対応策:273ca993f084584514ef76dff312aa4b&#34;&gt;対応策&lt;/h2&gt;

&lt;p&gt;　プラグインのroutes.rbを正しく書き換えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ more plugins/redmine_cors/config/routes.rb 
RedmineApp::Application.routes.draw do
  match &amp;#039;*path&amp;#039;, :to =&amp;gt; &amp;#039;cors#preflight&amp;#039;, via: :options
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　なお、書き換えた後に気が付いたのですが、Redmine CORSをRedmine3.0で動作させるためのプルリクエストが出てますね。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「ランダム書店」を作ってみた</title>
      <link>http://aimless.jp/blog/archives/1520</link>
      <pubDate>Sun, 10 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1520</guid>
      <description>&lt;p&gt;帰宅途中に「&lt;a href=&#34;https://twitter.com/kongou_ae/status/299891452148871168&#34; title=&#34;Twitter&#34; target=&#34;_blank&#34;&gt;ランダムにAmazonの商品ページを表示するWebサービス「Amazonおみくじ」とかどうだろうか。&lt;/a&gt;」と思いついたのでRoRで実現しました。Amazonの本からお勧めの本をランダムに表示してくれる&lt;a href=&#34;http://random-book.aimless.jp/&#34; title=&#34;ランダム書店&#34; target=&#34;_blank&#34;&gt;「ランダム書店」&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;　実際のところお勧めの30冊とは名ばかりで、内部処理的にはrand関数で生成された乱数を利用してsqlite3に格納されているデータを引っ張ってきているだけです。&lt;/p&gt;

&lt;p&gt;　現時点の在庫は、文庫・新書、コミック、ライトノベル、趣味・実用、ビジネス、コンピュータの6つのBrowseNodeからTopSeller順で取得した100件の合計600件です。現時点では1つのBrowseNodeから100件以上アイテムを取得する方法が分らないので6つのカテゴリを一緒くたにしていますが、1つのBrowseNodeから1000件くらい取得できる方法があればカテゴリ別にしたいと思います。&lt;/p&gt;

&lt;p&gt;　それにして、しょうもない思いつきが簡単に形になるRuby on Rails(とBootstrap)はすごい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS Looking Glassを作ってみた。</title>
      <link>http://aimless.jp/blog/archives/1497</link>
      <pubDate>Sat, 02 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1497</guid>
      <description>&lt;p&gt;ruby on Railsのお勉強という事で、&lt;a href=&#34;http://dnslg.aimless.jp/&#34; title=&#34;DNS Looking Glass&#34; target=&#34;_blank&#34;&gt;DNS Looking Glass&lt;/a&gt;なるものを作ってみました。入力されたドメインを複数のISPキャッシュDNSに非再帰で問い合わせし、その結果を表示します。「Python3.3で&lt;a href=&#34;https://github.com/bortzmeyer/dns-lg&#34; title=&#34;https://github.com/bortzmeyer/dns-lg&#34; target=&#34;_blank&#34;&gt;dns-lg&lt;/a&gt;が動かせない！ﾑｷｰ!!ｸﾔｼｲ!!」のモチベーションのみで作ったので、利用シーンがイマイチ思いつきません。あるとすれば、ドメインのお引っ越し確認や毒入りの状況調査等でしょうか。。。&lt;/p&gt;

&lt;p&gt;　最初はResolvで作っていましたが、Resolvで非再帰問い合わせをする方法が分らなかったので、&lt;a href=&#34;https://github.com/bluemonk/net-dns&#34; title=&#34;net-dns&#34; target=&#34;_blank&#34;&gt;net-dns&lt;/a&gt;で書きなおしました。勢いで作ったのでまだまだ至らぬところばかりです。時間を見つけて下記を直したいと思います。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;検索対象のキャッシュDNSの台数を増やす。&lt;/li&gt;
&lt;li&gt;キャッシュDNSの逆引き名を表示する。&lt;/li&gt;
&lt;li&gt;複数のレコードが返ってきた場合に全件を表示する。&lt;/li&gt;
&lt;li&gt;TTLを表示する。&lt;/li&gt;
&lt;li&gt;Viewに日本語を表示する。&lt;/li&gt;
&lt;li&gt;入力されたドメインがドメインかどうかをチェックする&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Rubyのresolvで遊んでみた</title>
      <link>http://aimless.jp/blog/archives/1456</link>
      <pubDate>Tue, 01 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1456</guid>
      <description>&lt;p&gt;あけましておめでどうございます。今年も宜しくお願い致します。&lt;/p&gt;

&lt;p&gt;　年末から年明けにかけて、Rubyのresolvライブラリで遊んでおりました。こんな便利なライブラリがあったのですね。IPv6kumaのAAAAチェックはコード内でdigを実施してその結果を正規表現でひっかけて値を入手しています・・・いつかresolvを使って書きなおしたいと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat test.rb
require &#39;resolv&#39;

resolver = Resolv::DNS.new(:nameserver =&amp;gt; [&#39;127.0.0.1&#39;])
resolver.getresources(&#34;aimless.jp&#34;,Resolv::DNS::Resource::IN::NS).each {|ns|
    print &#34;#{ns.name}n&#34;
}
# ruby test.rb 
dns1.aimless.jp
dns4.aimless.jp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　せっかくなのでresolvとブイロクマがチェックしている約5000件のFQDNを利用して、色々なリストを作ってみました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/authlist.txt&#34; title=&#34;権威DNS&#34; target=&#34;_blank&#34;&gt;権威DNSのリスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/openresolv.txt&#34; title=&#34;オープンリゾルバ&#34; target=&#34;_blank&#34;&gt;オープンリゾルバリストのリスト（権威と兼任）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/versionbind.txt&#34; title=&#34;BINDのバージョン&#34; target=&#34;_blank&#34;&gt;Bindのバージョンリスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　resolvでchaosクラスを問い合わせる術が不明だったため、最後のリストはIPv6kumaと同様コード内でdigをベタ打ちしました・・・version.bindレコードにAAを書く発想はなかった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6のアドレスをソートする</title>
      <link>http://aimless.jp/blog/archives/1125</link>
      <pubDate>Sun, 10 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1125</guid>
      <description>&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;　素人が試行錯誤した結果です。そのまま文字列として比較すると上手くいかなかったので、IPv6アドレスから:を除去して10進数数値に変換する形でソートしたら上手く行きました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;IPv6アドレス配列.sort!{|a,b| a.gsub(&#34;:&#34;,&#34;&#34;).hex.to_i &amp;lt;=&amp;gt; b.gsub(&#34;:&#34;,&#34;&#34;).hex.to_i }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　短縮記法を気にせず10進法に変換しているので、正しくソートされているかに一抹の不安があります。とはいえ、これでブイロクマの抱えていた既知の問題が解決できそうです。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>