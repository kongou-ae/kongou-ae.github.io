<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dns on Aimless</title>
    <link>http://aimless.jp/categories/dns/</link>
    <description>Recent content in Dns on Aimless</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 14 Jul 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://aimless.jp/categories/dns/feed/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>129.250.35.250/251はPublic DNSではありません。</title>
      <link>http://aimless.jp/blog/archives/2089</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/2089</guid>
      <description>

&lt;h1 id=&#34;public-dnsって何:4d30cb603464b0a78539f8b4a271cd21&#34;&gt;Public DNSって何？&lt;/h1&gt;

&lt;p&gt;　このエントリーでは、以下の2つの条件を見たすDNSサーバをPublic DNSと呼びます。 代表的なPublic DNSは、Public DNSという名称を広めたGoogle Public DNSです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ネットワーク的な制限がかかっておらず、誰からのアクセスも受け入れるキャッシュDNSサーバ&lt;/li&gt;
&lt;li&gt;サービス提供者が、誰でもアクセスしてよいと謳っているキャッシュDNSサーバ&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;129-46-250-35-250-251はpublic-dnsなのか:4d30cb603464b0a78539f8b4a271cd21&#34;&gt;129&amp;#46;250.35.250/251はPublic DNSなのか？&lt;/h1&gt;

&lt;p&gt;　以下のように、NTT Americaが有している129.250.35.250/251をPublic DNSと記載するエントリーが散見されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ichitaso.com/web-service/public-dns-8-8-8-8-129-250-35-250/&#34;&gt;Public DNS 「8.8.8.8」「129.250.35.250」は本当に速いのか？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.halpas.com/blog/archives/2938&#34;&gt;無料で安全なDNSサービスの一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　また、以下のようなWebアクセスが早くなるという話を信じて、自ネットワークのDNSを129.250.35.250/251に変更された方もいると思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cosmonote.blogspot.com/2014/01/dns-1292503525112925035250.html&#34;&gt;DNS Serverの変更で高速化 [129.250.35.251,129.250.35.250]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Public DNSを設定したらやっぱり速くなりました][4]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　NTT Americaの公開連絡先に「129.250.35.250/251はPublic DNSですかー？」という失礼な質問をメールで行った結果、NOCの中の人から「These are resolvers for NTT customers only.」との回答を受領しました。つまりこれらのDNSサーバは、NTTのお客様限定のキャッシュDNSサーバであり、Public DNSではありません。&lt;/p&gt;

&lt;p&gt;　「問い合わせに応答するから使ってもいい」という理論は間違っています。これらのキャッシュDNSサーバは、設定上あなたの問い合わせに応答しているだけです。通信経路上の装置がPingに応答するのと同じレベルです。&lt;/p&gt;

&lt;p&gt;　129.250.35.250/251はNTTのお客様向けのキャッシュDNSサーバでありPublic DNSではありません。このキャッシュDNSサーバを利用する事は、ただ乗りと同じです。無賃乗車です。&lt;/p&gt;

&lt;p&gt;　キャッシュDNSサーバが原因で名前解決ができず困った時に真摯に対応してくれるのは、お金を払っているISPだけです。Public DNSはあなたを守ってくれません。ですから、キャッシュDNSサーバは原則ISPから提供されるものを利用すべきです。&lt;/p&gt;

&lt;p&gt;　ISPのキャッシュDNSサーバが腐っており困っている場合は、以下のいずれかにしましょう。くれぐれもインターネット上の書き込みを信じて、無賃乗車しないようお気を付けください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サービス提供者がPublic DNSだと宣言しているキャッシュDNSサーバ&lt;/li&gt;
&lt;li&gt;自分でキャッシュDNSサーバを建てる。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[4]: &lt;a href=&#34;http://staku.designbits.jp/public-dns/&#34;&gt;http://staku.designbits.jp/public-dns/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DTIのキャッシュDNSサーバで遊んでみた</title>
      <link>http://aimless.jp/blog/archives/2043</link>
      <pubDate>Mon, 16 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/2043</guid>
      <description>

&lt;h1 id=&#34;きっかけ:ccef5413ddce8dddbd1d207018f25004&#34;&gt;きっかけ&lt;/h1&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;
  &lt;p&gt;
    DTIのDNSサーバ202.216.229.30、なんでcloudfrontの正引きを高確率で127.0.0.1返すの。
  &lt;/p&gt;
  
  &lt;p&gt;
    — エアコンが新しくなったmatsuu (@matsuu)
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;https://twitter.com/matsuu/statuses/478153480327016449&#34;&gt;2014, 6月 15&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;まじか！と思い、conohaからdigって見るものの、REFUSEDになってしまいました。「ちぇー、ちゃんアクセス制限してんのかー」と思っていたところ、@tss_ontapさんから「繰り返し聞いてみましょう」とのアドバイスをいただきました。&lt;/p&gt;

&lt;p&gt;言われた通り何度もdigった結果、、、&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;
  &lt;p&gt;
    &lt;a href=&#34;https://twitter.com/tss_ontap&#34;&gt;@tss_ontap&lt;/a&gt; うお、返ってきた！え！？
  &lt;/p&gt;
  
  &lt;p&gt;
    — こんごー@頑張らないために頑張る (@kongou_ae)
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;https://twitter.com/kongou_ae/statuses/478173202749718528&#34;&gt;2014, 6月 15&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;アクセス制限しているにも関わらず、何回かに1回、応答を返すという謎動作。「このDNS、ロードバランサか？」ということで、どんな構成なのか調べてみました。&lt;/p&gt;

&lt;h1 id=&#34;調べかた:ccef5413ddce8dddbd1d207018f25004&#34;&gt;調べかた&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;DTIが提供する以下のキャッシュDNSサーバ（202.216.224.30、202.216.229.30）にServersMans VPSから再帰問い合わせ行う。（このためだけにVPSを借りた。）&lt;/li&gt;
&lt;li&gt;問い合わせで利用するFQDNは、絶対にキャッシュされていないドメイン（自ドメインのNXDOMAINになるもの）を使う&lt;/li&gt;
&lt;li&gt;自ドメインの権威DNSはIPv4アドレスのみでListenする。&lt;/li&gt;
&lt;li&gt;自ドメインの権威DNSのクエリログを確認し、問い合わせで使ったFQDNを問い合わせに来たDNSサーバをチェックする。&lt;/li&gt;
&lt;li&gt;問い合わせに来たDNSサーバに、ConohaVPSから再帰問い合わせを行い、オープンリゾルバかどうかチェックする。&lt;/li&gt;
&lt;li&gt;面白そうなので、問い合わせに来たDNSサーバに、ServersManからversion.bindを問い合わせる。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;結果:ccef5413ddce8dddbd1d207018f25004&#34;&gt;結果&lt;/h1&gt;

&lt;h2 id=&#34;202-46-216-224-30:ccef5413ddce8dddbd1d207018f25004&#34;&gt;202&amp;#46;216.224.30&lt;/h2&gt;

&lt;p&gt;202&amp;#46;216.224.30は13台中2台がオープンリゾルバでした。version.bindを信じるのであれば、ソースからコンパイルしたbindはちゃんとしていて、RHELのパッケージを使っているbindはオープンリゾルバのようです。&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      VIP
    &lt;/th&gt;
    
    &lt;th&gt;
      Real server
    &lt;/th&gt;
    
    &lt;th&gt;
      Open Resolver
    &lt;/th&gt;
    
    &lt;th&gt;
      Version bind
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      202.216.224.30
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.10
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.11
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.12
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.13
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.14
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.15
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.16
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.17
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.18
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.19
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.34
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.60
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.224.61
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;202-46-216-229-30:ccef5413ddce8dddbd1d207018f25004&#34;&gt;202&amp;#46;216.229.30&lt;/h2&gt;

&lt;p&gt;202&amp;#46;216.229.30は8台中5台がオープンリゾルバでした。version.bindを信じるのであれば、202.216.224.30と同様、ソースからコンパイルしたbindはちゃんとしていて、RHELのパッケージを使っているbindはオープンリゾルバのようです。&lt;/p&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;
      VIP
    &lt;/th&gt;
    
    &lt;th&gt;
      Real server
    &lt;/th&gt;
    
    &lt;th&gt;
      Open Resolver
    &lt;/th&gt;
    
    &lt;th&gt;
      Version bind
    &lt;/th&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
      202.216.229.30
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.6
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.10
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.11
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.13
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.14
    &lt;/td&gt;
    
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      9.10.0-P1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.41
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.135
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;td&gt;
    &lt;/td&gt;
    
    &lt;td&gt;
      202.216.229.146
    &lt;/td&gt;
    
    &lt;td&gt;
      Yes
    &lt;/td&gt;
    
    &lt;td&gt;
      9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h1 id=&#34;雑感:ccef5413ddce8dddbd1d207018f25004&#34;&gt;雑感&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ロードバランサの配下に置くサーバは、設定を合わせた方がいいと思います。。。&lt;/li&gt;
&lt;li&gt;DNSサービスって、リアルサーバが沢山必要なのね。。。&lt;/li&gt;
&lt;li&gt;BINDのバージョンをあわせないのは、脆弱性対策なのかなあ。。。全部同じバージョンだと、ひとつの脆弱性で全部死ぬから。&lt;/li&gt;
&lt;li&gt;でも、全部BINDだから、新BINDコロリが出たら全滅だよなぁ。。。&lt;/li&gt;
&lt;li&gt;LBの配下で異なるキャッシュDNSサーバ（e.g.unboundとBIND）を動かすと強いDNSサービスが作れそう。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Google Public DNSを使うとxvideos.comにアクセスできない理由</title>
      <link>http://aimless.jp/blog/archives/2007</link>
      <pubDate>Thu, 05 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/2007</guid>
      <description>&lt;p&gt;[xvideosが突然見れなくなった場合はDNSサーバーを変更しよう][1]を踏まえて、色々と調べたのでメモ。&lt;/p&gt;

&lt;p&gt;　アクセス出来ない理由は、『Google Public DNSが、国内？からのwww.xvideos.comに関する問い合わせに対して、正しくないAレコードを返すから』の様に見えます。ただし、なぜそんな動作になるのかは不明。&lt;/p&gt;

&lt;p&gt;　自分で運用しているキャッシュDNSサーバ on ConoHaで名前解決を行った結果は以下の通りです。複数のAレコードが帰ってきます。本サーバをリゾルバに設定している自PCからxvideos.comへのアクセスは問題ありません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ drill www.xvideos.com                                                                         
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 6737
;; flags: qr rd ra ; QUERY: 1, ANSWER: 9, AUTHORITY: 0, ADDITIONAL: 0 
;; QUESTION SECTION:
;; www.xvideos.com.     IN      A

;; ANSWER SECTION:
www.xvideos.com.        20      IN      CNAME   xvideos.com.
xvideos.com.    300     IN      A       141.0.174.39
xvideos.com.    300     IN      A       141.0.174.40
xvideos.com.    300     IN      A       141.0.174.41
xvideos.com.    300     IN      A       141.0.174.34
xvideos.com.    300     IN      A       141.0.174.35
xvideos.com.    300     IN      A       141.0.174.36
xvideos.com.    300     IN      A       141.0.174.37
xvideos.com.    300     IN      A       141.0.174.38

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 451 msec
;; SERVER: ::1
;; WHEN: Thu Jun  5 09:23:05 2014
;; MSG SIZE  rcvd: 175
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　自分で運用しているキャッシュDNSサーバ on ConoHaから8.8.8.8に問い合わせた結果は以下の通りです。先程のDNS応答には含まれていないIPアドレス(141.0.173.53)が帰ってきます。さくらVPS at 大阪から8.8.8.8に問い合わせても結果は同じでした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ drill www.xvideos.com @8.8.8.8
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 56317
;; flags: qr rd ra ; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0 
;; QUESTION SECTION:
;; www.xvideos.com.     IN      A

;; ANSWER SECTION:
www.xvideos.com.        361     IN      CNAME   xvideos.com.
xvideos.com.    361     IN      A       141.0.173.53

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 38 msec
;; SERVER: 8.8.8.8
;; WHEN: Thu Jun  5 09:23:01 2014
;; MSG SIZE  rcvd: 63
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　Google Public DNSに案内された141.0.173.53にアクセスすると、Nginxがステータスコード301で&lt;a href=&#34;http://randomserver.com/を通知します。これによって、www.xvideos.comにアクセスしたつもりが、randomserver.comにアクセスしてしまうという現象が発生します。&#34;&gt;http://randomserver.com/を通知します。これによって、www.xvideos.comにアクセスしたつもりが、randomserver.comにアクセスしてしまうという現象が発生します。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　なんでだろと思いぐぐってみたのですが、見つかるのは日本語のページばかりです。「海外は困っていないのか？もしかして国内だけの現象？」と思い、AWSのVirginia上にEC2をデプロイして、同様の確認をしてみました。&lt;/p&gt;

&lt;p&gt;　EC2に設定されているリゾルバ（172.16.0.23）に問い合わせた結果は以下の通りです。正しいAレコードが帰ってきます。なお、EC2のリゾルバは、54.80.202.238のアドレスで外部に問い合わせを行っていました。（EC2でairinterop.jpの名前解決を行い、airinterop.jpの権威DNSサーバのクエリログを確認）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ drill www.xvideos.com
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 4238
;; flags: qr rd ra ; QUERY: 1, ANSWER: 9, AUTHORITY: 0, ADDITIONAL: 0 
;; QUESTION SECTION:
;; www.xvideos.com.     IN      A

;; ANSWER SECTION:
www.xvideos.com.        6       IN      CNAME   xvideos.com.
xvideos.com.    24      IN      A       141.0.174.39
xvideos.com.    24      IN      A       141.0.174.40
xvideos.com.    24      IN      A       141.0.174.41
xvideos.com.    24      IN      A       141.0.174.34
xvideos.com.    24      IN      A       141.0.174.35
xvideos.com.    24      IN      A       141.0.174.36
xvideos.com.    24      IN      A       141.0.174.37
xvideos.com.    24      IN      A       141.0.174.38

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 4 msec
;; SERVER: 172.16.0.23
;; WHEN: Thu Jun  5 03:40:41 2014
;; MSG SIZE  rcvd: 175
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　EC2から8.8.8.8に問い合わせを行った結果は以下の通りです。正しいAレコードが帰ってきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ drill www.xvideos.com @8.8.8.8
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, rcode: NOERROR, id: 17395
;; flags: qr rd ra ; QUERY: 1, ANSWER: 9, AUTHORITY: 0, ADDITIONAL: 0 
;; QUESTION SECTION:
;; www.xvideos.com.     IN      A

;; ANSWER SECTION:
www.xvideos.com.        15      IN      CNAME   xvideos.com.
xvideos.com.    295     IN      A       141.0.174.35
xvideos.com.    295     IN      A       141.0.174.36
xvideos.com.    295     IN      A       141.0.174.37
xvideos.com.    295     IN      A       141.0.174.38
xvideos.com.    295     IN      A       141.0.174.39
xvideos.com.    295     IN      A       141.0.174.40
xvideos.com.    295     IN      A       141.0.174.41
xvideos.com.    295     IN      A       141.0.174.34

;; AUTHORITY SECTION:

;; ADDITIONAL SECTION:

;; Query time: 15 msec
;; SERVER: 8.8.8.8
;; WHEN: Thu Jun  5 03:40:52 2014
;; MSG SIZE  rcvd: 175
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　なぜGoogle Public DNSがこのような動作をするのか、すごく気になります。&lt;/p&gt;

&lt;p&gt;　なお、Google Public DNSを使っているせいでxvideos.comにアクセス出来ない方につきましては、安易にDNSサーバのIPアドレスを変更するのではなく、以下の対応をされるのがよろしいかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;利用しているIPSが提供するキャッシュDNSサーバを設定する&lt;/li&gt;
&lt;li&gt;PCのhostsファイルに正しいAレコードのIPアドレスを設定する&lt;/li&gt;
&lt;li&gt;自前でキャッシュDNSサーバを運営する（PCにunboundを入れるのが気軽だと思います）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://dobonkai.hatenablog.com/entry/xvideos/%E7%AA%81%E7%84%B6%E8%A6%8B%E3%82%8C%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F/DNS%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/%E5%A4%89%E6%9B%B4&#34;&gt;http://dobonkai.hatenablog.com/entry/xvideos/%E7%AA%81%E7%84%B6%E8%A6%8B%E3%82%8C%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F/DNS%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/%E5%A4%89%E6%9B%B4&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WebブラウザにおけるDNSプリフェッチの動作</title>
      <link>http://aimless.jp/blog/archives/1951</link>
      <pubDate>Fri, 23 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1951</guid>
      <description>

&lt;h1 id=&#34;きっかけ:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;きっかけ&lt;/h1&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;
  &lt;p&gt;
    DNSプリフェッチをHTML側で大量に書いておくと、DNSサーバー側にアクセス不能攻撃が出来るBINDの脆弱性とかあったな。 / “DNSプリフェッチでウェブページの読み込み速度をスピードアップ | 海外SEO情報ブログ” &lt;a href=&#34;http://t.co/hvDIfAxouu&#34;&gt;http://t.co/hvDIfAxouu&lt;/a&gt;
  &lt;/p&gt;
  
  &lt;p&gt;
    — 齊藤貴義 (@miraihack)
  &lt;/p&gt;
  
  &lt;p&gt;
    &lt;a href=&#34;https://twitter.com/miraihack/statuses/469622995346919424&#34;&gt;2014, 5月 22&lt;/a&gt;
  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;思いつき:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;思いつき&lt;/h1&gt;

&lt;p&gt;　ブラウザに大量のDNSプリフェッチを実施させることで、経路上のNAT箱の送信元ポートを枯渇させ、DoS状態にする。&lt;/p&gt;

&lt;h1 id=&#34;テスト環境:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;テスト環境&lt;/h1&gt;

&lt;p&gt;![テスト環境][1]&lt;/p&gt;

&lt;p&gt;　DNSプリフェッチが大量に記載されたウェブページを用意します。&lt;/p&gt;

&lt;p&gt;　unboundのlocal-zone機能を利用して”local.”に対するDNS問い合わせを自分で答えるようにします。ただし、問い合わせに対して素直に答えてしまうと、NAT装置が速やかにセッションをクローズし、送信元ポートをリリースしてしまう可能性があるので、”local-zone: &amp;#8220;local.&amp;#8221; deny”としてDNSクエリを破棄するようにします。&amp;#8221;[1-70000].local. IN A xxx.xxx.xxx.xxx&amp;#8221;をunbound.confに書きたくないという理由もあります。&lt;/p&gt;

&lt;h1 id=&#34;chromeの場合:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;Chromeの場合&lt;/h1&gt;

&lt;p&gt;　バージョン 34.0.1847.137 mのchromeでウェブページにアクセスしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Webページはすんなりと表示されます。&lt;/li&gt;
&lt;li&gt;プリフェッチによるDNSクエリは、以下のログの通りです。&lt;/li&gt;
&lt;li&gt;以下の問い合わせを実施した後は、問い合わせを行いません。&lt;/li&gt;
&lt;li&gt;プリフェッチするFQDNが上から1,2,3と連番にならないのが面白い。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;firefoxの場合:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;Firefoxの場合&lt;/h1&gt;

&lt;p&gt;　バージョン28.0でウェブページにアクセスしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Webページの表示に少々時間がかかります。&lt;/li&gt;
&lt;li&gt;プリフェッチによるDNSクエリは、以下のログの通りです。&lt;/li&gt;
&lt;li&gt;ログ上では途中で問い合わせが止まっているように見えますが、実際の挙動は同じペースでずっとDNS問い合わせを続けます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;ieの場合:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;IEの場合&lt;/h1&gt;

&lt;p&gt;　IE11でウェブページにアクセスしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Webページがなかなか表示されません。IEが応答なしになります。&lt;/li&gt;
&lt;li&gt;ある程度プリフェッチすると、満足したのかwebページを表示します。&lt;/li&gt;
&lt;li&gt;次回以降の読み込みを高速化するためのプリフェッチのせいで、初回の読み込みが大幅に遅延します。&lt;/li&gt;
&lt;li&gt;プリフェッチによるDNSクエリは、以下のログの通りです。&lt;/li&gt;
&lt;li&gt;ログ上では途中で問い合わせが止まっていますが、実際の挙動は同じペースでずっとDNS問い合わせを続けます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;結論:782d2c12b6f857f3610e1363aeeb61ba&#34;&gt;結論&lt;/h1&gt;

&lt;p&gt;　WEBページにアクセスすると一気に70000件のDNS問い合わせが行われることを期待したのですが、そんな馬鹿な実装をしているブラウザはありませんでした。DNSプリフェッチでNAT箱は殺せない模様。 　もしかしたら、Safariやoperaだと一気にDNSクエリを投げてくれるのかしら。&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://aimless.jp/blog/images/test_diagram.png&#34;&gt;http://aimless.jp/blog/images/test_diagram.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>b10-cmdctlのエラーでBIND10が起動しない。</title>
      <link>http://aimless.jp/blog/archives/1729</link>
      <pubDate>Thu, 06 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1729</guid>
      <description>&lt;p&gt;BIND10のb10-cmdctlはTCP/8080を利用します。そのため、TCP/8080を既に利用中の場合、BIND10がb10-cmdctlのエラー（[Errno 98] Address already in use）によって起動しません。うちの環境では、Nginx配下のサーバがTCP/808xを利用しているため、サーバ側のポートを変更することで対応しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$netstat -anp | grep b10-cmd 
tcp        0      0 127.0.0.1:8080              0.0.0.0:*                   LISTEN      15266/b10-cmdctl   
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;FATAL [b10-cmdctl.cmdctl]: CMDCTL_UNCAUGHT_EXCEPTION uncaught exception: Error creating server, because: [Errno 98] Address already in use 
INFO [b10-cmdctl.cmdctl]: CMDCTL_EXITING exiting
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>IPv6の逆引きを設定してみた</title>
      <link>http://aimless.jp/blog/archives/1661</link>
      <pubDate>Sat, 31 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1661</guid>
      <description>

&lt;p&gt;ZABBIXが発報するエラーメールの通知先にGmailを設定したところ、ZABBIXが利用するMTAのIPv6逆引きが存在しなかったため、以下のメッセージとともにメールを拒否されました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The sender does not meet basic ipv6 550-5.7.1 sen&lt;/p&gt;

&lt;p&gt;ding guidelines of authentication and rdns resolution of sending 550-5.7.1 ip. Please review 550 5.7.1 &lt;a href=&#34;https://support.goog&#34;&gt;https://support.goog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;le.com/mail/answer/81126for more information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　利用しているIPv6アドレスはHEのTunnel Brokerで割り当ててもらっているものです。HEはIPv6の逆引きを権限委譲してくれるので、Gmailにメールを送信する為に逆引きを設定してみました。&lt;/p&gt;

&lt;h3 id=&#34;heに逆引きゾーンを委譲してもらう:257ab340aabbd3110eab36a4c8d84da0&#34;&gt;　HEに逆引きゾーンを委譲してもらう&lt;/h3&gt;

&lt;p&gt;　Tunnel Broker管理画面の『rDNS Delegations』欄に、権限移譲してほしいDNSサーバのホスト名を入力します。BIND9のプライマリと、BIND10のセカンダリDNSを登録しました。&lt;/p&gt;

&lt;p&gt;![HE&amp;rsquo;s rDNS][1]&lt;/p&gt;

&lt;h3 id=&#34;プライマリ-bind9-を設定する:257ab340aabbd3110eab36a4c8d84da0&#34;&gt;　プライマリ（BIND9）を設定する&lt;/h3&gt;

&lt;p&gt;　プライマリ側にゾーンファイルを作成します。HEの管理画面では移譲されるゾーン名が不明なので、dig +trace [逆引きしたいIPv6アドレス]などで委譲されるゾーン名を確認します。私の場合（/48でもらっているIPv6）は1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpaでした。ゾーンファイル内に記載するPTRレコードはかなり長くなります。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x.x.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.5.0.0 IN PTR xxxx.aimless.jp.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　ゾーンファイル作成後、named.confに1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpaをゾーンとして登録します。&lt;/p&gt;

&lt;h3 id=&#34;セカンダリdns-bind10-を設定する:257ab340aabbd3110eab36a4c8d84da0&#34;&gt;　セカンダリDNS(BIND10）を設定する&lt;/h3&gt;

&lt;p&gt;　BIND10を1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpaのセカンダリDNSとして設定します。Zonemgrにゾーンを登録し、Xfrinにゾーン転送を受け付けるドメインとして登録します。登録後にプライマリからゾーンを転送してもらいます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; config add Zonemgr/secondary_zones
&amp;gt; config set Zonemgr/secondary_zones[1]/name 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa
&amp;gt; config add Xfrin/zones
&amp;gt; config set Xfrin/zones[1]/name 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa
&amp;gt; config set Xfrin/zones[1]/master_addr xxx.xxx.xxx.xxx
&amp;gt; config commit
&amp;gt; Xfrin retransfer zone_name = 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa
2013-08-31 01:24:46.110 WARN  [b10-xfrin.xfrin/4658] XFRIN_ZONE_CREATED Zone 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa/IN not found in the given data source, newly created
2013-08-31 01:24:46.111 INFO  [b10-xfrin.xfrin/4658] XFRIN_ZONE_NO_SOA Zone 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa/IN does not have SOA
2013-08-31 01:24:46.146 INFO  [b10-xfrin.xfrin/4658] XFRIN_XFR_TRANSFER_STARTED AXFR transfer of zone 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa/IN started
2013-08-31 01:24:46.853 INFO  [b10-xfrin.xfrin/4658] XFRIN_TRANSFER_SUCCESS full AXFR transfer of zone 1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa/IN succeeded (messages: 1, records: 4, bytes: 237, run time: 0.727 seconds, 326 bytes/second)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;動作確認:257ab340aabbd3110eab36a4c8d84da0&#34;&gt;動作確認&lt;/h3&gt;

&lt;p&gt;　プライマリDNSに問い合わせてみる。ANSWER SECTIONで設定したPTRが返ってきています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# dig @dns1.aimless.jp +norec -x 2001:470:fde1:53::xx

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.3-P2 &amp;lt;&amp;lt;&amp;gt;&amp;gt; @dns1.aimless.jp +norec -x 2001:470:fde1:53::xx
; (2 servers found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 65045
;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 5

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;x.x.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.5.0.0.1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. IN PTR

;; ANSWER SECTION:
x.x.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.5.0.0.1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN PTR xxxx.aimless.jp.

;; AUTHORITY SECTION:
1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN NS    dns1.aimless.jp.
1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN NS    dns4.aimless.jp.

;; ADDITIONAL SECTION:
dns1.aimless.jp.        3600    IN      A       49.212.54.72
dns1.aimless.jp.        3600    IN      AAAA    2001:e41:31d4:3648::1
dns4.aimless.jp.        3600    IN      A       157.7.135.191
dns4.aimless.jp.        3600    IN      AAAA    2001:470:23:756::2

;; Query time: 0 msec
;; SERVER: 2001:e41:31d4:3648::1#53(2001:e41:31d4:3648::1)
;; WHEN: Sat Aug 31 11:50:45 JST 2013
;; MSG SIZE  rcvd: 257
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　セカンダリDNSに問い合わせてみる。ANSWER SECTIONで設定したPTRが返ってきています。ただし、BIND9とは異なりADDITIONAL SECTIONが返ってこない。設定ミスか実装の違いかお勉強します。。。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# dig @dns4.aimless.jp +norec -x 2001:470:fde1:53::xx

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.9.3-P2 &amp;lt;&amp;lt;&amp;gt;&amp;gt; @dns4.aimless.jp +norec -x 2001:470:fde1:53::xx
; (2 servers found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 55580
;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;x.x.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.5.0.0.1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. IN PTR

;; ANSWER SECTION:
x.x.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.5.0.0.1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN PTR xxxx.aimless.jp.

;; AUTHORITY SECTION:
1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN NS    dns1.aimless.jp.
1.e.d.f.0.7.4.0.1.0.0.2.ip6.arpa. 3600 IN NS    dns4.aimless.jp.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://aimless.jp/blog/images/rDNS_of_HE.png&#34;&gt;http://aimless.jp/blog/images/rDNS_of_HE.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BIND10の統計情報</title>
      <link>http://aimless.jp/blog/archives/1634</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1634</guid>
      <description>

&lt;p&gt;BIND10の統計情報をZabbixで監視するために、いろいろと試行錯誤したのでメモしておきます。BIND10の統計情報を確認する方法は2つあります&lt;/p&gt;

&lt;h3 id=&#34;bindctlを利用する:b95a6d6c552b327a457238e0c871076e&#34;&gt;bindctlを利用する&lt;/h3&gt;

&lt;p&gt;　bindctlでStats showを実施すると下記のような統計情報が出力されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; Stats show
{
    &#34;Auth&#34;: {
        &#34;zones&#34;: {
            &#34;_SERVER_&#34;: {
                &#34;authqryrej&#34;: 4, 
                &#34;opcode&#34;: {
                    &#34;iquery&#34;: 1, 
                    &#34;notify&#34;: 65, 
                    &#34;other&#34;: 3, 
                    &#34;query&#34;: 45120, 
                    &#34;status&#34;: 0, 
                    &#34;update&#34;: 0
                }, 
                &#34;qryauthans&#34;: 44679, 
                &#34;qrynoauthans&#34;: 441, 
                &#34;qrynxrrset&#34;: 1697, 
                &#34;qryreferral&#34;: 0, 
                &#34;qrysuccess&#34;: 42277, 
                &#34;rcode&#34;: {
                    &#34;badvers&#34;: 0, 
                    &#34;formerr&#34;: 4, 
                    &#34;noerror&#34;: 44034, 
                    &#34;notauth&#34;: 0, 
                    &#34;notimp&#34;: 1, 
                    &#34;notzone&#34;: 0, 
                    &#34;nxdomain&#34;: 705, 
                    &#34;nxrrset&#34;: 0, 
                    &#34;other&#34;: 0, 
                    &#34;refused&#34;: 441, 
                    &#34;servfail&#34;: 0, 
                    &#34;yxdomain&#34;: 0, 
                    &#34;yxrrset&#34;: 0
                }, 
                &#34;request&#34;: {
                    &#34;badednsver&#34;: 0, 
                    &#34;badsig&#34;: 0, 
                    &#34;dnssec_ok&#34;: 36387, 
                    &#34;edns0&#34;: 37150, 
                    &#34;sig0&#34;: 0, 
                    &#34;tcp&#34;: 85, 
                    &#34;tsig&#34;: 0, 
                    &#34;udp&#34;: 45104, 
                    &#34;v4&#34;: 37427, 
                    &#34;v6&#34;: 7762
                }, 
                &#34;response&#34;: {
                    &#34;edns0&#34;: 37150, 
                    &#34;sig0&#34;: 0, 
                    &#34;truncated&#34;: 770, 
                    &#34;tsig&#34;: 0
                }, 
                &#34;responses&#34;: 45185
            }
        }
    }, 
    &#34;Init&#34;: {
        &#34;boot_time&#34;: &#34;2013-06-29T11:22:04Z&#34;
    }, 
    &#34;Stats&#34;: {
        &#34;boot_time&#34;: &#34;2013-06-30T16:04:01Z&#34;, 
        &#34;last_update_time&#34;: &#34;2013-08-27T11:38:54Z&#34;, 
        &#34;lname&#34;: &#34;hogehoge&#34;, 
        &#34;report_time&#34;: &#34;2013-08-27T11:38:54Z&#34;, 
        &#34;timestamp&#34;: 1377603534.2760894
    }, 
    &#34;Xfrout&#34;: {
        &#34;axfr_running&#34;: 0, 
        &#34;ixfr_running&#34;: 0, 
        &#34;socket&#34;: {
            &#34;unixdomain&#34;: {
                &#34;accept&#34;: 0, 
                &#34;acceptfail&#34;: 0, 
                &#34;bindfail&#34;: 0, 
                &#34;close&#34;: 0, 
                &#34;open&#34;: 1, 
                &#34;openfail&#34;: 0, 
                &#34;recverr&#34;: 0, 
                &#34;senderr&#34;: 0
            }
        }, 
        &#34;zones&#34;: {
            &#34;_SERVER_&#34;: {
                &#34;notifyoutv4&#34;: 0, 
                &#34;notifyoutv6&#34;: 0, 
                &#34;xfrrej&#34;: 0, 
                &#34;xfrreqdone&#34;: 0
            }
        }
    }
}
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;b10-stats-httpdを利用する:b95a6d6c552b327a457238e0c871076e&#34;&gt;b10-stats-httpdを利用する&lt;/h3&gt;

&lt;p&gt;　b10-stats-httpdを利用することで、Stats showの出力結果をHTTPで確認することができます。なお、bindctlからb10-stats-httpdを起動させる方法がわからなかったので、b10-stats-httpdを直接実行して起動させました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;
&amp;lt;?xml-stylesheet type=&#34;text/xsl&#34; href=&#34;http://aimless.jp/bind10/statistics.xsl&#34;?&amp;gt;
&amp;lt;bind10:statistics xmlns:bind10=&#34;http://bind10.isc.org/bind10&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xsi:schemaLocation=&#34;http://bind10.isc.org/bind10 /bind10/statistics.xsd&#34;&amp;gt;
  &amp;lt;item description=&#34;Zone statistics items. Items for all zones are stored in &#39;_SERVER_&#39;.&#34; identifier=&#34;Auth/zones&#34; name=&#34;zones&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;Zone statistics&#34; type=&#34;named_set&#34; uri=&#34;/bind10/statistics/xml/Auth/zones&#34;/&amp;gt;
  &amp;lt;item identifier=&#34;Auth/zones/_SERVER_&#34; name=&#34;zone&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of authoritative queries rejected by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/authqryrej&#34; name=&#34;authqryrej&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;authqryrej&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/authqryrej&#34; value=&#34;4&#34;/&amp;gt;
  &amp;lt;item description=&#34;OpCode statistics&#34; identifier=&#34;Auth/zones/_SERVER_/opcode&#34; name=&#34;opcode&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of OpCode=IQuery requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/iquery&#34; name=&#34;iquery&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.iquery&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/iquery&#34; value=&#34;1&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of OpCode=Notify requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/notify&#34; name=&#34;notify&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.notify&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/notify&#34; value=&#34;65&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests in other OpCode received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/other&#34; name=&#34;other&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.other&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/other&#34; value=&#34;3&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of OpCode=Query requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/query&#34; name=&#34;query&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.query&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/query&#34; value=&#34;45126&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of OpCode=Status requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/status&#34; name=&#34;status&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.status&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/status&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of OpCode=Update requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/opcode/update&#34; name=&#34;update&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;opcode.update&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/opcode/update&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of queries received by the b10-auth server resulted in authoritative answer.&#34; identifier=&#34;Auth/zones/_SERVER_/qryauthans&#34; name=&#34;qryauthans&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;qryauthans&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/qryauthans&#34; value=&#34;44685&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of queries received by the b10-auth server resulted in non-authoritative answer.&#34; identifier=&#34;Auth/zones/_SERVER_/qrynoauthans&#34; name=&#34;qrynoauthans&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;qrynoauthans&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/qrynoauthans&#34; value=&#34;441&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of queries received by the b10-auth server resulted in NoError and AA bit is set in the response, but the number of answer RR == 0.&#34; identifier=&#34;Auth/zones/_SERVER_/qrynxrrset&#34; name=&#34;qrynxrrset&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;qrynxrrset&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/qrynxrrset&#34; value=&#34;1698&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of queries received by the b10-auth server resulted in referral answer.&#34; identifier=&#34;Auth/zones/_SERVER_/qryreferral&#34; name=&#34;qryreferral&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;qryreferral&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/qryreferral&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of queries received by the b10-auth server resulted in rcode = NoError and the number of answer RR &amp;gt;= 1.&#34; identifier=&#34;Auth/zones/_SERVER_/qrysuccess&#34; name=&#34;qrysuccess&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;qrysuccess&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/qrysuccess&#34; value=&#34;42282&#34;/&amp;gt;
  &amp;lt;item description=&#34;Rcode statistics&#34; identifier=&#34;Auth/zones/_SERVER_/rcode&#34; name=&#34;rcode&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 16 (BADVERS).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/badvers&#34; name=&#34;badvers&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.badvers&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/badvers&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 1 (FormErr).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/formerr&#34; name=&#34;formerr&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.formerr&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/formerr&#34; value=&#34;4&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 0 (NoError).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/noerror&#34; name=&#34;noerror&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.noerror&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/noerror&#34; value=&#34;44040&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 9 (NotAuth).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/notauth&#34; name=&#34;notauth&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.notauth&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/notauth&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 4 (NotImp).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/notimp&#34; name=&#34;notimp&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.notimp&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/notimp&#34; value=&#34;1&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 10 (NotZone).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/notzone&#34; name=&#34;notzone&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.notzone&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/notzone&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 3 (NXDomain).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/nxdomain&#34; name=&#34;nxdomain&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.nxdomain&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/nxdomain&#34; value=&#34;705&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 8 (NXRRSet).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/nxrrset&#34; name=&#34;nxrrset&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.nxrrset&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/nxrrset&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in other RCODEs.&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/other&#34; name=&#34;other&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.other&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/other&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 5 (Refused).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/refused&#34; name=&#34;refused&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.refused&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/refused&#34; value=&#34;441&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 2 (ServFail).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/servfail&#34; name=&#34;servfail&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.servfail&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/servfail&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 6 (YXDomain).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/yxdomain&#34; name=&#34;yxdomain&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.yxdomain&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/yxdomain&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests received by the b10-auth server resulted in RCODE = 7 (YXRRSet).&#34; identifier=&#34;Auth/zones/_SERVER_/rcode/yxrrset&#34; name=&#34;yxrrset&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;rcode.yxrrset&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/rcode/yxrrset&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item description=&#34;Request statistics&#34; identifier=&#34;Auth/zones/_SERVER_/request&#34; name=&#34;request&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with unsupported EDNS version received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/badednsver&#34; name=&#34;badednsver&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.badednsver&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/badednsver&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with invalid TSIG or SIG(0) signature received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/badsig&#34; name=&#34;badsig&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.badsig&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/badsig&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with &amp;quot;DNSSEC OK&amp;quot; (DO) bit was set received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/dnssec_ok&#34; name=&#34;dnssec_ok&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.dnssec_ok&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/dnssec_ok&#34; value=&#34;36391&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with EDNS0 received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/edns0&#34; name=&#34;edns0&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.edns0&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/edns0&#34; value=&#34;37154&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with SIG(0) received by the b10-auth server; currently not implemented in BIND 10.&#34; identifier=&#34;Auth/zones/_SERVER_/request/sig0&#34; name=&#34;sig0&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.sig0&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/sig0&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of TCP requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/tcp&#34; name=&#34;tcp&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.tcp&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/tcp&#34; value=&#34;85&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requests with TSIG received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/tsig&#34; name=&#34;tsig&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.tsig&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/tsig&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of UDP requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/udp&#34; name=&#34;udp&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.udp&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/udp&#34; value=&#34;45110&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of IPv4 requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/v4&#34; name=&#34;v4&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.v4&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/v4&#34; value=&#34;37433&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of IPv6 requests received by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/request/v6&#34; name=&#34;v6&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;request.v6&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/request/v6&#34; value=&#34;7762&#34;/&amp;gt;
  &amp;lt;item description=&#34;Response statistics&#34; identifier=&#34;Auth/zones/_SERVER_/response&#34; name=&#34;response&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;response&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/response&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of responses with EDNS0 sent by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/response/edns0&#34; name=&#34;edns0&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;response.edns0&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/response/edns0&#34; value=&#34;37154&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of responses with SIG(0) sent by the b10-auth server; currently not implemented in BIND 10.&#34; identifier=&#34;Auth/zones/_SERVER_/response/sig0&#34; name=&#34;sig0&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;response.sig0&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/response/sig0&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of truncated responses sent by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/response/truncated&#34; name=&#34;truncated&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;response.truncated&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/response/truncated&#34; value=&#34;770&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of responses with TSIG sent by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/response/tsig&#34; name=&#34;tsig&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;response.tsig&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/response/tsig&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of responses sent by the b10-auth server.&#34; identifier=&#34;Auth/zones/_SERVER_/responses&#34; name=&#34;responses&#34; optional=&#34;false&#34; owner=&#34;Auth&#34; title=&#34;responses&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Auth/zones/_SERVER_/responses&#34; value=&#34;45191&#34;/&amp;gt;
  &amp;lt;item default=&#34;1970-01-01T00:00:00Z&#34; description=&#34;A date time when bind10 process starts initially&#34; format=&#34;date-time&#34; identifier=&#34;Init/boot_time&#34; name=&#34;boot_time&#34; optional=&#34;false&#34; owner=&#34;Init&#34; title=&#34;Boot time&#34; type=&#34;string&#34; uri=&#34;/bind10/statistics/xml/Init/boot_time&#34; value=&#34;2013-06-29T11:22:04Z&#34;/&amp;gt;
  &amp;lt;item default=&#34;1970-01-01T00:00:00Z&#34; description=&#34;A date time when the stats module starts initially or when the stats module restarts&#34; format=&#34;date-time&#34; identifier=&#34;Stats/boot_time&#34; name=&#34;boot_time&#34; optional=&#34;false&#34; owner=&#34;Stats&#34; title=&#34;Boot time&#34; type=&#34;string&#34; uri=&#34;/bind10/statistics/xml/Stats/boot_time&#34; value=&#34;2013-06-30T16:04:01Z&#34;/&amp;gt;
  &amp;lt;item default=&#34;1970-01-01T00:00:00Z&#34; description=&#34;The latest date time when the stats module receives from other modules like auth server or b10-init process and so on&#34; format=&#34;date-time&#34; identifier=&#34;Stats/last_update_time&#34; name=&#34;last_update_time&#34; optional=&#34;false&#34; owner=&#34;Stats&#34; title=&#34;Last update time&#34; type=&#34;string&#34; uri=&#34;/bind10/statistics/xml/Stats/last_update_time&#34; value=&#34;2013-08-27T11:47:10Z&#34;/&amp;gt;
  &amp;lt;item default=&#34;&#34; description=&#34;A localname of stats module given via CC protocol&#34; identifier=&#34;Stats/lname&#34; name=&#34;lname&#34; optional=&#34;false&#34; owner=&#34;Stats&#34; title=&#34;Local Name&#34; type=&#34;string&#34; uri=&#34;/bind10/statistics/xml/Stats/lname&#34; value=&#34;hogehoge&#34;/&amp;gt;
  &amp;lt;item default=&#34;1970-01-01T00:00:00Z&#34; description=&#34;A date time when stats module reports&#34; format=&#34;date-time&#34; identifier=&#34;Stats/report_time&#34; name=&#34;report_time&#34; optional=&#34;false&#34; owner=&#34;Stats&#34; title=&#34;Report time&#34; type=&#34;string&#34; uri=&#34;/bind10/statistics/xml/Stats/report_time&#34; value=&#34;2013-08-27T11:47:10Z&#34;/&amp;gt;
  &amp;lt;item default=&#34;0.0&#34; description=&#34;A current time stamp since epoch time (1970-01-01T00:00:00Z)&#34; identifier=&#34;Stats/timestamp&#34; name=&#34;timestamp&#34; optional=&#34;false&#34; owner=&#34;Stats&#34; title=&#34;Timestamp&#34; type=&#34;real&#34; uri=&#34;/bind10/statistics/xml/Stats/timestamp&#34; value=&#34;1377604030.9478726&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of AXFRs in progress&#34; identifier=&#34;Xfrout/axfr_running&#34; name=&#34;axfr_running&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;AXFR running&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/axfr_running&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of IXFRs in progress&#34; identifier=&#34;Xfrout/ixfr_running&#34; name=&#34;ixfr_running&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;IXFR running&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/ixfr_running&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item description=&#34;A directory name of socket statistics&#34; identifier=&#34;Xfrout/socket&#34; name=&#34;socket&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Socket&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket&#34;/&amp;gt;
  &amp;lt;item description=&#34;A directory name of UNIX domain statistics&#34; identifier=&#34;Xfrout/socket/unixdomain&#34; name=&#34;unixdomain&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;UNIX domain&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets incoming connections successfully accepted&#34; identifier=&#34;Xfrout/socket/unixdomain/accept&#34; name=&#34;accept&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Accept&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/accept&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets incoming accept failures&#34; identifier=&#34;Xfrout/socket/unixdomain/acceptfail&#34; name=&#34;acceptfail&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Accept failures&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/acceptfail&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets bind failures&#34; identifier=&#34;Xfrout/socket/unixdomain/bindfail&#34; name=&#34;bindfail&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Bind failures&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/bindfail&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets closed&#34; identifier=&#34;Xfrout/socket/unixdomain/close&#34; name=&#34;close&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Close&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/close&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets opened successfully&#34; identifier=&#34;Xfrout/socket/unixdomain/open&#34; name=&#34;open&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Open&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/open&#34; value=&#34;1&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets open failures&#34; identifier=&#34;Xfrout/socket/unixdomain/openfail&#34; name=&#34;openfail&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Open failures&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/openfail&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets receive errors&#34; identifier=&#34;Xfrout/socket/unixdomain/recverr&#34; name=&#34;recverr&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Receive errors&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/recverr&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;UNIX domain sockets send errors&#34; identifier=&#34;Xfrout/socket/unixdomain/senderr&#34; name=&#34;senderr&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Send errors&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/socket/unixdomain/senderr&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item description=&#34;A directory name of per-zone statistics&#34; identifier=&#34;Xfrout/zones&#34; name=&#34;zones&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Zone names&#34; type=&#34;named_set&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones&#34;/&amp;gt;
  &amp;lt;item description=&#34;A actual zone name or special zone name _SERVER_ representing an entire server&#34; identifier=&#34;Xfrout/zones/_SERVER_&#34; name=&#34;zonename&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Zone name&#34; type=&#34;map&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones/_SERVER_&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of IPv4 notifies per zone name sent out from Xfrout&#34; identifier=&#34;Xfrout/zones/_SERVER_/notifyoutv4&#34; name=&#34;notifyoutv4&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;IPv4 notifies&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones/_SERVER_/notifyoutv4&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of IPv6 notifies per zone name sent out from Xfrout&#34; identifier=&#34;Xfrout/zones/_SERVER_/notifyoutv6&#34; name=&#34;notifyoutv6&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;IPv6 notifies&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones/_SERVER_/notifyoutv6&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of XFR requests per zone name rejected by Xfrout&#34; identifier=&#34;Xfrout/zones/_SERVER_/xfrrej&#34; name=&#34;xfrrej&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;XFR rejected requests&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones/_SERVER_/xfrrej&#34; value=&#34;0&#34;/&amp;gt;
  &amp;lt;item default=&#34;0&#34; description=&#34;Number of requested zone transfers completed per zone name&#34; identifier=&#34;Xfrout/zones/_SERVER_/xfrreqdone&#34; name=&#34;xfrreqdone&#34; optional=&#34;false&#34; owner=&#34;Xfrout&#34; title=&#34;Requested zone transfers&#34; type=&#34;integer&#34; uri=&#34;/bind10/statistics/xml/Xfrout/zones/_SERVER_/xfrreqdone&#34; value=&#34;0&#34;/&amp;gt;
&amp;lt;/bind10:statistics&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>BIND10の統計情報をZABBIXでグラフ化してみた</title>
      <link>http://aimless.jp/blog/archives/1642</link>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1642</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://aimless.jp/blog/blog/archives/1634&#34; title=&#34;BIND10の統計情報&#34; target=&#34;_blank&#34;&gt;「BIND10の統計情報」&lt;/a&gt;に記載したb10-stats-httpdを利用して、BIND10の統計情報をZABBIXでグラフ化してみました。なお、監視対象のBIND10がしがないドメインのセカンダリDNSのため、描画されるグラフは全く面白くありません。。。&lt;/p&gt;

&lt;p&gt;![BIND10 Stats][1]&lt;/p&gt;

&lt;p&gt;　グラフ化したい項目をb10-stats-httpd経由で取得するスクリプトを作ります。下記は第二引数に「.1.3.6.1.4.1.2021.255.1」を与えられるとrequest.v4のvalueを、「.1.3.6.1.4.1.2021.255.2」を与えられるとrequest.v6のvalueを取得するスクリプトです。（改行コードが）&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/p&gt;

&lt;p&gt;　snmpdのpassを利用して、.1.3.6.1.4.1.2021.255.hogehogeをsnmpgetされた際にこのスクリプトが起動するようにします。passに記載したスクリプトは「EXEC -g MIBOID」の形式で実行されるので、スクリプト内でOIDを利用する場合は第二引数を拾う必要があります。（第一引数を拾うスクリプトを書いて「うごかなーいうごかなーい」と悩みました。。。）&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;&lt;/p&gt;

&lt;p&gt;　ZABBIXで「.1.3.6.1.4.1.2021.255.1」と「.1.3.6.1.4.1.2021.255.2」を監視するアイテムを作成し、それらを利用した複合グラフを作成すれば完成です。&lt;/p&gt;

&lt;p&gt;[1]: &lt;a href=&#34;http://dns4.aimless.jp/zabbinavi/10087/534_daily.png&#34;&gt;http://dns4.aimless.jp/zabbinavi/10087/534_daily.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows 8 で DHCPv6 のステートレスモードによる DNS サーバーのアドレス取得ができない</title>
      <link>http://aimless.jp/blog/archives/1620</link>
      <pubDate>Fri, 14 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1620</guid>
      <description>&lt;p&gt;こんな不具合があるのですね⇒&lt;a href=&#34;http://support.microsoft.com/kb/2772182/ja&#34; title=&#34;Windows 8 で DHCPv6 のステートレスモードによる DNS サーバーのアドレス取得ができない&#34; target=&#34;_blank&#34;&gt;Windows 8 で DHCPv6 のステートレスモードによる DNS サーバーのアドレス取得ができない&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　Path MTU Discoveryを今一度勉強するためにキャプチャしながらPingを打っていたところ、ステートレスDHCPv6でIPv6のDNSを受け取っているはずWin8が、IPv4のDNSに問い合わせを行っていることを発見しました。ipconfig /allでDNSを確認してみると、IPv4のDNSしか反映されていない。「なぜ？」と思いググってみたらこの不具合が見つかりました。パッチを当てたら見事に解決しました。よかったよかった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS Looking Glassを作ってみた。</title>
      <link>http://aimless.jp/blog/archives/1497</link>
      <pubDate>Sat, 02 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1497</guid>
      <description>&lt;p&gt;ruby on Railsのお勉強という事で、&lt;a href=&#34;http://dnslg.aimless.jp/&#34; title=&#34;DNS Looking Glass&#34; target=&#34;_blank&#34;&gt;DNS Looking Glass&lt;/a&gt;なるものを作ってみました。入力されたドメインを複数のISPキャッシュDNSに非再帰で問い合わせし、その結果を表示します。「Python3.3で&lt;a href=&#34;https://github.com/bortzmeyer/dns-lg&#34; title=&#34;https://github.com/bortzmeyer/dns-lg&#34; target=&#34;_blank&#34;&gt;dns-lg&lt;/a&gt;が動かせない！ﾑｷｰ!!ｸﾔｼｲ!!」のモチベーションのみで作ったので、利用シーンがイマイチ思いつきません。あるとすれば、ドメインのお引っ越し確認や毒入りの状況調査等でしょうか。。。&lt;/p&gt;

&lt;p&gt;　最初はResolvで作っていましたが、Resolvで非再帰問い合わせをする方法が分らなかったので、&lt;a href=&#34;https://github.com/bluemonk/net-dns&#34; title=&#34;net-dns&#34; target=&#34;_blank&#34;&gt;net-dns&lt;/a&gt;で書きなおしました。勢いで作ったのでまだまだ至らぬところばかりです。時間を見つけて下記を直したいと思います。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;検索対象のキャッシュDNSの台数を増やす。&lt;/li&gt;
&lt;li&gt;キャッシュDNSの逆引き名を表示する。&lt;/li&gt;
&lt;li&gt;複数のレコードが返ってきた場合に全件を表示する。&lt;/li&gt;
&lt;li&gt;TTLを表示する。&lt;/li&gt;
&lt;li&gt;Viewに日本語を表示する。&lt;/li&gt;
&lt;li&gt;入力されたドメインがドメインかどうかをチェックする&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>BIND10でキャッシュDNSサーバをやってみた</title>
      <link>http://aimless.jp/blog/archives/1475</link>
      <pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1475</guid>
      <description>&lt;p&gt;Rubyのresolvで遊ぶタイミングで、自PCのIPv6キャッシュDNSをunboundからBIND10に切り替えたのでメモ。&lt;/p&gt;

&lt;p&gt;　デフォルトだと権威DNSが全てのアドレスの53番でListenしてしまうので、権威DNSがListenするアドレスを公開アドレスに限定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# netstat -an | grep 53
tcp        0      0 0.0.0.0:53                  0.0.0.0:*                   LISTEN
tcp        0      0 :::53                       :::*                        LISTEN
udp        0      0 0.0.0.0:53                  0.0.0.0:*                               
udp        0      0 :::53                       :::*    

&amp;gt; config show all
...
Auth/listen_on[0]/address       &#34;::&#34;    string  (default)
Auth/listen_on[1]/address       &#34;0.0.0.0&#34;       string  (default)

&amp;gt; config set Auth/listen_on[0]/address 157.7.135.191
&amp;gt; config set Auth/listen_on[1]/address 2001:470:23:756::2
&amp;gt; config commit

# netstat -an | grep 53
tcp        0      0 157.7.135.191:53            0.0.0.0:*                   LISTEN
tcp        0      0 2001:470:23:756::2:53       :::*                        LISTEN
udp        0      0 157.7.135.191:53            0.0.0.0:*                               
udp        0      0 2001:470:23:756::2:53       :::*  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　キャッシュDNS機能であるb10-resolverを有効にします。デフォルトでは127.0.0.1:53と::1:53でキャッシュDNSが起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; config add Boss/components b10-resolver
&amp;gt; config set Boss/components/b10-resolver/special resolver
&amp;gt; config set Boss/components/b10-resolver/kind needed                           
&amp;gt; config set Boss/components/b10-resolver/priority 10                           
&amp;gt; config commit

&amp;gt; config show all
...
Resolver/listen_on[0]/address   &#34;::1&#34;   string  (default)
Resolver/listen_on[0]/port      53      integer (default)
Resolver/listen_on[1]/address   &#34;127.0.0.1&#34;     string  (default)
Resolver/listen_on[1]/port      53      integer (default)
Resolver/query_acl[0]   {&#34;action&#34;: &#34;ACCEPT&#34;, &#34;from&#34;: &#34;127.0.0.1&#34;}       any    (default)
Resolver/query_acl[1]   {&#34;action&#34;: &#34;ACCEPT&#34;, &#34;from&#34;: &#34;::1&#34;}     any     (default)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　外部から参照するために、キャッシュDNSとしてListenするIPアドレスを追加します。IPv4だと簡単にはできませんが、IPv6は/48のPrefixでグローバルユニキャストアドレスをもらっているので簡単です&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; config add Resolver/listen_on 
&amp;gt; config set Resolver/listen_on[2]/address 2001:470:fde1:xx::xx/64
&amp;gt; config set Resolver/listen_on[2]/port 53                                                                     
&amp;gt; config commit  
&amp;gt; config show all
...
Resolver/listen_on[0]/address   &#34;::1&#34;   string  
Resolver/listen_on[0]/port      53      integer 
Resolver/listen_on[1]/address   &#34;127.0.0.1&#34;     string  
Resolver/listen_on[1]/port      53      integer 
Resolver/listen_on[2]/address   &#34;2001:470:fde1:xx::xx&#34;  string  
Resolver/listen_on[2]/port      53      integer 

# netstat -anp | grep 53 | grep 2001:470:fde1:xx::xx                              
tcp        0      0 2001:470:fde1:xx::xx:53     :::*                        LISTEN      26141/b10-resolver  
udp        0      0 2001:470:fde1:xx::xx:53     :::*                                    26141/b10-resolver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　問い合わせを許可するPrefixをACLに追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; config set Resolver/query_acl[2] {&#34;from&#34;: [&#34;2610:d0:3211:xx::/64&#34;, &#34;2001:e41:31d4:3648::1/128&#34;], &#34;action&#34;: &#34;ACCEPT&#34;}
&amp;gt; config commit
&amp;gt; config show all
...
Resolver/query_acl[0]   {&#34;from&#34;: &#34;127.0.0.1&#34;, &#34;action&#34;: &#34;ACCEPT&#34;}       any     
Resolver/query_acl[1]   {&#34;from&#34;: &#34;::1&#34;, &#34;action&#34;: &#34;ACCEPT&#34;}     any     
Resolver/query_acl[2]   {&#34;from&#34;: [&#34;2610:d0:3211:xx::/64&#34;, &#34;2001:e41:31d4:3648::1/128&#34;], &#34;action&#34;: &#34;ACCEPT&#34;}    any  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　確認の為2001:e41:31d4:3648::1からキャッシュDNSにwww.google.comを問い合わせみると、ちゃんと応答が返ってきました。多分動いていると思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rubyのresolvで遊んでみた</title>
      <link>http://aimless.jp/blog/archives/1456</link>
      <pubDate>Tue, 01 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1456</guid>
      <description>&lt;p&gt;あけましておめでどうございます。今年も宜しくお願い致します。&lt;/p&gt;

&lt;p&gt;　年末から年明けにかけて、Rubyのresolvライブラリで遊んでおりました。こんな便利なライブラリがあったのですね。IPv6kumaのAAAAチェックはコード内でdigを実施してその結果を正規表現でひっかけて値を入手しています・・・いつかresolvを使って書きなおしたいと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat test.rb
require &#39;resolv&#39;

resolver = Resolv::DNS.new(:nameserver =&amp;gt; [&#39;127.0.0.1&#39;])
resolver.getresources(&#34;aimless.jp&#34;,Resolv::DNS::Resource::IN::NS).each {|ns|
    print &#34;#{ns.name}n&#34;
}
# ruby test.rb 
dns1.aimless.jp
dns4.aimless.jp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　せっかくなのでresolvとブイロクマがチェックしている約5000件のFQDNを利用して、色々なリストを作ってみました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/authlist.txt&#34; title=&#34;権威DNS&#34; target=&#34;_blank&#34;&gt;権威DNSのリスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/openresolv.txt&#34; title=&#34;オープンリゾルバ&#34; target=&#34;_blank&#34;&gt;オープンリゾルバリストのリスト（権威と兼任）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns1.aimless.jp/versionbind.txt&#34; title=&#34;BINDのバージョン&#34; target=&#34;_blank&#34;&gt;Bindのバージョンリスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　resolvでchaosクラスを問い合わせる術が不明だったため、最後のリストはIPv6kumaと同様コード内でdigをベタ打ちしました・・・version.bindレコードにAAを書く発想はなかった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BIND10でゾーン転送を試してみた</title>
      <link>http://aimless.jp/blog/archives/1448</link>
      <pubDate>Sat, 22 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1448</guid>
      <description>&lt;p&gt;セカンダリDNSをbind10-1.0.0-betaで作り直しました。その際にゾーン転送の設定を確認したのでメモ&lt;/p&gt;

&lt;p&gt;　まずはマスターからのゾーン転送を受け入れる設定を追加する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# bindctl 
&amp;gt; config add Xfrin/zones
&amp;gt; config set Xfrin/zones[0]/name &#34;aimless.jp&#34;
&amp;gt; config set Xfrin/zones[0]/master_addr &#34;xxx.xxx.xxx.xxx&#34;
&amp;gt; config commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　試しにマスターのbindを再起動させてゾーン転送を実施するも下記エラーにより上手く行かず・・・b10-zonemgrが「aimless.jpなど知らん！」とお怒りです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2012-12-22 20:37:24.605 ERROR [b10-zonemgr.zonemgr/23101] ZONEMGR_UNKNOWN_ZONE_NOTIFIED notified zone aimless.jp./IN from xxx.xxx.xxx.xxx is not known to the zone manager
2012-12-22 20:37:24.605 ERROR [b10-auth.auth/23105] AUTH_ZONEMGR_ERROR received error response from zone manager: &#34;[b10-zonemgr] Notified zone (aimless.jp., IN) doesn&#39;t belong to zonemgr&#34;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　そこでZonemgrにドメインを覚えさせます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# bindctl 
&amp;gt; config add Zonemgr/secondary_zones
&amp;gt; config set Zonemgr/secondary_zones[0]/name aimless.jp
&amp;gt; config commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　改めてマスターのbindを再起動させてゾーン転送を実施した所、上手く受信出来ました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2012-12-22 20:43:54.384 INFO  [b10-xfrin.xfrin/23104] XFRIN_XFR_TRANSFER_STARTED AXFR transfer of zone aimless.jp/IN started
2012-12-22 20:43:54.429 INFO  [b10-xfrin.xfrin/23104] XFRIN_TRANSFER_SUCCESS full AXFR transfer of zone aimless.jp/IN succeeded (messages: 1, records: 87, bytes: 9069, run time: 0.086 seconds, 105344 bytes/second)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Gehirn DNSを試してみた。</title>
      <link>http://aimless.jp/blog/archives/1428</link>
      <pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1428</guid>
      <description>

&lt;p&gt;TLでGehirnDNSなるサービスが流れて来たので早速試してみました。なぜ試そうかと思ったかというと、名前が中二病心をくすぐったからです。&lt;/p&gt;

&lt;h3 id=&#34;ドメイン所有権の確認:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;ドメイン所有権の確認&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://aimless.jp/blog/images/gehirn1.png&#34; alt=&#34;dns-verification&#34; /&gt;&lt;/p&gt;

&lt;p&gt;　アカウントを取得してドメインを登録しようとすると、所有権の確認が行われます。ちょっと前に色々ありましたからね。「新規であればレジストラのDNSにGehirn DNSと検証用のコードを登録してから来い。所有者なら出来るだろ！」「移転なら、ドメインのTXTレコードに検証用のコードを示せ。所有者なら出来るだろ！」って事だと思います。とりあえず移転扱いと言う事で、自ドメインのTXTに検証用コードを追加しました。&lt;/p&gt;

&lt;h3 id=&#34;登録画面:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;登録画面&lt;/h3&gt;

&lt;p&gt;![gehirn-console][2]&lt;/p&gt;

&lt;p&gt;　GUIでぽちぽちする形で登録できます。登録出来る内容は、NS、A、AAAA、MX、CNAME、TXT、SRVです。ただし、GehirnDNSのDNSサーバがIPv4にしか対応していないので、AAAAは実質無駄かなと思います。また、RRSIGとDNSKEYに対応していないのでDNSSECは未対応です。なお、ゾーン転送に関する設定画面が存在しないため、セカンダリとしての使い方は出来ないと思います。&lt;/p&gt;

&lt;h3 id=&#34;api利用:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;API利用&lt;/h3&gt;

&lt;p&gt;　ARIを利用する事で、DNSを操作する事が出来ます。ここらへん疎いので試せていません。。。&lt;a href=&#34;http://support.gehirn.jp/manual/dns/api&#34; title=&#34;Gehirn DNS APIリファレンス&#34; target=&#34;_blank&#34;&gt;Gehirn DNS APIリファレンス&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;インポート-エクスポート:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;インポート/エクスポート&lt;/h3&gt;

&lt;p&gt;　Bindのゾーンファイル形式でのインポート/エクスポートが出来ます。現在の設定をバックアップする意味でエクスポートが便利かなと思います。また、大量に追加したいけどGUIだとめんどくさい時に、インポートを使うこともできますね。&lt;/p&gt;

&lt;h3 id=&#34;サブドメインをgehirndnsで管理する:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;サブドメインをGehirnDNSで管理する&lt;/h3&gt;

&lt;p&gt;　GehirnDNSで管理しているドメインのサブドメインを、GehirnDNSへ権限委譲する事はできません。aimless.jpを登録している状態で、gehirn.aimless.jpを登録しようとした際に、「409: Conflict: すでにドメインが存在しています」というメッセージが出て拒否されました。&lt;/p&gt;

&lt;h3 id=&#34;勝手なまとめ:c7ba77dd01a5da1e7cd6427b246d95d1&#34;&gt;勝手なまとめ&lt;/h3&gt;

&lt;p&gt;　APIでアクセスできるDNSって珍しいような気がします。そういった利用をしたい方にはお勧めかもしれません。&lt;/p&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://aimless.jp/blog/images/gehirn2.png&#34;&gt;http://aimless.jp/blog/images/gehirn2.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BIND10で権威DNSを試してみた</title>
      <link>http://aimless.jp/blog/archives/1411</link>
      <pubDate>Sun, 14 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://aimless.jp/blog/archives/1411</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://aimless.jp/blog/blog/archives/1383&#34; title=&#34;BIND10を起動してみた&#34; target=&#34;_blank&#34;&gt;前回にて&lt;/a&gt;BIND10のインストールが上手く行ったので、権威DNSの設定（&lt;a href=&#34;http://bind10.isc.org/docs/bind10-guide.html#authserver&#34; title=&#34;Chapter 9. Authoritative Server&#34; target=&#34;_blank&#34;&gt;Chapter 9. Authoritative Server&lt;/a&gt;）を試してみました。&lt;/p&gt;

&lt;h3 id=&#34;b10-authを自動起動させる:ce7d797d588d83e194d594be1f16f2d0&#34;&gt;b10-authを自動起動させる&lt;/h3&gt;

&lt;p&gt;　デフォルトではb10-auth（権威DNS用プロセス）が自動起動しないので、自動起動するように設定変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 ~]# bindctl
&amp;gt; config add Boss/components b10-auth
&amp;gt; config set Boss/components/b10-auth/special auth
&amp;gt; config set Boss/components/b10-auth/kind needed
&amp;gt; config set Boss/components/b10-auth/priority 10
&amp;gt; config commit
2012-10-14 16:18:12.502 INFO  [b10-boss.boss] BIND10_CONFIGURATOR_RECONFIGURE reconfiguring running components
2012-10-14 16:18:12.503 INFO  [b10-boss.boss] BIND10_COMPONENT_START component b10-auth is starting
2012-10-14 16:18:12.503 INFO  [b10-boss.boss] BIND10_STARTING_PROCESS starting process b10-auth
&amp;gt; 2012-10-14 16:18:12.515 INFO  [b10-auth.auth] AUTH_SERVER_CREATED server created
2012-10-14 16:18:12.528 INFO  [b10-auth.auth] AUTH_SERVER_STARTED server started
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ゾーンファイルを読み込ませる:ce7d797d588d83e194d594be1f16f2d0&#34;&gt;ゾーンファイルを読み込ませる&lt;/h3&gt;

&lt;p&gt;　BIND10開発版だとsqlite方式と従来のゾーンファイル形式がサポートされているようで、デフォルトで両パターンの設定例が乗っています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 ~]# bindctl
&amp;gt; config show all
（中略）
data_sources/classes/IN[0]/type &#34;sqlite3&#34;       string  (default)
data_sources/classes/IN[0]/params       {&#34;database_file&#34;: &#34;/usr/local/var/bind10-devel/zone.sqlite3&#34;}      any     (default)
data_sources/classes/IN[0]/cache-enable false   boolean (default)
data_sources/classes/IN[0]/cache-zones  []      list    
data_sources/classes/CH[0]/type &#34;static&#34;        string  (default)
data_sources/classes/CH[0]/params       &#34;/usr/local/share/bind10-devel/static.zone&#34;     any     (default)
data_sources/classes/CH[0]/cache-enable false   boolean (default)
data_sources/classes/CH[0]/cache-zones  []      list    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　とりあえずゾーンファイル方式を試します。sqliteはデータベースファイルの作り方が分らなくて。。。まずはデフォルトで読み込まれているstatic.zoneを削除します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 ~]# bindctl
&amp;gt; config remove data_sources/classes CH
&amp;gt; config commit
&amp;gt; config show all
（中略）
data_sources/classes/IN[0]/type &#34;sqlite3&#34;       string  
data_sources/classes/IN[0]/params       {&#34;database_file&#34;: &#34;/usr/local/var/bind10-devel/zone.sqlite3&#34;}      any     
data_sources/classes/IN[0]/cache-enable false   boolean (default)
data_sources/classes/IN[0]/cache-zones  []      list   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　そして、ソースファイルに含まれているexample.net用のゾーンファイルを読み込ませます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 ~]# bindctl 
[&#34;login success &#34;] login as root
&amp;gt; config add data_sources/classes/IN
&amp;gt; config set data_sources/classes/IN[1]/type MasterFiles
&amp;gt; config set data_sources/classes/IN[1]/cache-enable true
&amp;gt; config set data_sources/classes/IN[1]/params { &#34;example.net&#34;: &#34;/usr/local/var/bind10-devel/example.net&#34; }
&amp;gt; config commit
&amp;gt; config show all
（中略）
data_sources/classes/IN[0]/type &#34;sqlite3&#34;       string  
data_sources/classes/IN[0]/params       {&#34;database_file&#34;: &#34;/usr/local/var/bind10-devel/zone.sqlite3&#34;}      any     
data_sources/classes/IN[0]/cache-enable false   boolean (default)
data_sources/classes/IN[0]/cache-zones  []      list    
data_sources/classes/IN[1]/type &#34;MasterFiles&#34;   string  
data_sources/classes/IN[1]/params       {&#34;example.net&#34;: &#34;/usr/local/var/bind10-devel/example.net&#34;}any      
data_sources/classes/IN[1]/cache-enable true    boolean 
data_sources/classes/IN[1]/cache-zones  []      list    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　ゾーンファイルに記載されているa.dns.example.netを問い合わせるとちゃんと答えました。同一セグメントのwindowsPCからBIND10を指定してa.dns.example.netをnslookupしてみましたが、こちらもちゃんと答えました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 ~]# dig @localhost a.dns.example.net
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.10.rc1.el6_3.5 &amp;lt;&amp;lt;&amp;gt;&amp;gt; @localhost a.dns.example.net
; (2 servers found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 38474
;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 3, ADDITIONAL: 7
;; WARNING: recursion requested but not available

;; QUESTION SECTION:
;a.dns.example.net.             IN      A

;; ANSWER SECTION:
a.dns.example.net.      1000    IN      A       1.1.1.1

;; AUTHORITY SECTION:
example.net.            1000    IN      NS      a.dns.example.net.
example.net.            1000    IN      NS      b.dns.example.net.
example.net.            1000    IN      NS      c.dns.example.net.

;; ADDITIONAL SECTION:
a.dns.example.net.      1000    IN      AAAA    2:2::2:2
b.dns.example.net.      1000    IN      AAAA    4:4::4:4
b.dns.example.net.      1000    IN      AAAA    5:5::5:5
b.dns.example.net.      1000    IN      A       3.3.3.3
c.dns.example.net.      1000    IN      AAAA    8:8::8:8
c.dns.example.net.      1000    IN      A       6.6.6.6
c.dns.example.net.      1000    IN      A       7.7.7.7

;; Query time: 0 msec
;; SERVER: ::1#53(::1)
;; WHEN: Sun Oct 14 17:01:33 2012
;; MSG SIZE  rcvd: 257
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　逆に、設定を削除したstatic.zoneに記載されていたauthors.bindには答えません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@centos6 bind10-devel]# dig @127.0.0.1 -c CH -t TXT authors.bind

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.2rc1-RedHat-9.8.2-0.10.rc1.el6_3.5 &amp;lt;&amp;lt;&amp;gt;&amp;gt; @127.0.0.1 -c CH -t TXT authors.bind
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: REFUSED, id: 30891
;; flags: qr rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 0
;; WARNING: recursion requested but not available

;; QUESTION SECTION:
;authors.bind.                  CH      TXT

;; Query time: 0 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sun Oct 14 19:21:50 2012
;; MSG SIZE  rcvd: 30
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;　細かい部分はさておき、権威DNSとしての基本的な設定が出来ました。従来のnamed.confを編集する方法ではなく、bindctlで作業していく方式の様です。後はゾーン転送とDNSSECですね。dnssec-signzoneなどのコマンドが見当たらないので、どうしたものかと悩んでいます。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>